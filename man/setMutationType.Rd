% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slim_lang.R
\name{setMutationType}
\alias{setMutationType}
\alias{Mutation$setMutationType}
\alias{.M$setMutationType}
\title{SLiM method setMutationType}
\usage{
setMutationType(mutType)
}
\arguments{
\item{mutType}{An object of type integer or MutationType object. Must be of
length 1 (a singleton). See details for description.}
}
\value{
An object of type any but object or void or void or void.
}
\description{
Documentation for SLiM function \code{setMutationType}, which is a method of the
SLiM class \code{Mutation}.
}
\details{
Set the mutation type of the mutation to mutType (which may be
specified as either an integer identifier or a MutationType object). This
implicitly changes the dominance coefficient of the mutation to that of the new
mutation type, since the dominance coefficient is a property of the mutation
type. On the other hand, the selection coefficient of the mutation is not
changed, since it is a property of the mutation object itself; it can be changed
explicitly using the setSelectionCoeff() method if so desired. The mutation
type of a mutation is normally a constant in simulations, so be sure you know
what you are doing. Changing this will normally affect the fitness values
calculated at the end of the current generation; if you want current fitness
values to be affected, you can call SLiMSim’s method recalculateFitness() – but
see the documentation of that method for caveats. In nucleotide-based models,
a restriction applies: nucleotide-based mutations may not be changed to a non-
nucleotide-based mutation type, and non-nucleotide-based mutations may not be
changed to a nucleotide-based mutation type.
}
