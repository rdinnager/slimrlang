% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slim_lang.R
\name{treeSeqCoalesced}
\alias{treeSeqCoalesced}
\alias{SLiMSim$treeSeqCoalesced}
\alias{.SS$treeSeqCoalesced}
\title{SLiM method treeSeqCoalesced}
\usage{
treeSeqCoalesced(void)
}
\arguments{
\item{void}{An object of type . See details for description.}
}
\value{
An object of type logical. Return will be of length 1 (a singleton)
}
\description{
Documentation for SLiM function \code{treeSeqCoalesced}, which is a method of
the SLiM class \code{SLiMSim}.
}
\details{
Returns the coalescence state for the recorded tree sequence at
the last simplification. The returned value is a logical singleton flag,
T to indicate that full coalescence was observed at the last treesequence
simplification (meaning that there is a single ancestral individual that roots
all ancestry trees at all sites along the chromosome – although not necessarily
the same ancestor at all sites), or F if full coalescence was not observed. For
simple models, reaching coalescence may indicate that the model has reached an
equilibrium state, but this may not be true in models that modify the dynamics
of the model during execution by changing migration rates, introducing new
mutations programmatically, dictating non-random mating, etc., so be careful
not to attach more meaning to coalescence than it is due; some models may
require burn-in beyond coalescence to reach equilibrium, or may not have an
equilibrium state at all. Also note that some actions by a model, such as adding
a new subpopulation, may cause the coalescence state to revert from T back
to F (at the next simplification), so a return value of T may not necessarily
mean that the model is coalesced at the present moment – only that it was
coalesced at the last simplification. This method may only be called if tree
sequence recording has been turned on with initializeTreeSeq(); in addition,
checkCoalescence=T must have been supplied to initializeTreeSeq(), so that the
necessary work is done during each tree-sequence simplification. Since this
method does not perform coalescence checking itself, but instead simply returns
the coalescence state observed at the last simplification, it may be desirable
to call treeSeqSimplify() immediately before treeSeqCoalesced() to obtain up-to-
date information. However, the speed penalty of doing this in every generation
would be large, and most models do not need this level of precision; usually it
is sufficient to know that the model has coalesced, without knowing whether that
happened in the current generation or in a recent preceding generation.
}
