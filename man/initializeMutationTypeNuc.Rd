% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slim_lang.R
\name{initializeMutationTypeNuc}
\alias{initializeMutationTypeNuc}
\alias{Initialize$initializeMutationTypeNuc}
\alias{.Init$initializeMutationTypeNuc}
\title{SLiM method initializeMutationTypeNuc}
\usage{
initializeMutationTypeNuc(id, dominanceCoeff, distributionType, ...)
}
\arguments{
\item{id}{An object of type integer or string. Must be of length 1 (a
singleton). See details for description.}

\item{dominanceCoeff}{An object of type numeric. Must be of length 1 (a
singleton). See details for description.}

\item{distributionType}{An object of type string. Must be of length 1 (a
singleton). See details for description.}

\item{...}{An object of type NA. NA See details for description.}
}
\value{
An object of type MutationType object. Return will be of length 1 (a
singleton)
}
\description{
Documentation for SLiM function \code{initializeMutationTypeNuc}, which is a
method of the SLiM class \code{Initialize}.
}
\details{
Add a nucleotide-based mutation type at initialization time. This
function is identical to initializeMutationType() except that the new mutation
type will be nucleotide-based â€“ in other words, mutations belonging to the
new mutation type will have an associated nucleotide. This function may be
called only in nucleotide-based models (as enabled by the nucleotideBased
parameter to initializeSLiMOptions()). Nucleotide-based mutations always use
a mutationStackGroup of -1 and a mutationStackPolicy of "l". This ensures that
a new nucleotide mutation always replaces any previously existing nucleotide
mutation at a given position, regardless of the mutation types of the nucleotide
mutations. These values are set automatically by initializeMutationTypeNuc(),
and may not be changed. See the documentation for initializeMutationType() for
all other discussion.
}
